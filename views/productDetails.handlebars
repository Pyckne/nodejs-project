{{#extend "main"}}

{{#content "body"}}
  <div style="max-width: 800px; margin: auto; padding: 2rem;">
    <h1>üì¶ Productos en Tiempo Real</h1>

    <ul id="product-list">
      {{#each productos}}
        <li id="product-{{this._id}}">
          <strong>{{this.title}}</strong> - ${{this.price}} - Stock: {{this.stock}} - Categor√≠a: {{this.category}}  
          <br>ID: <code>{{this._id}}</code>
          {{#if this.thumbnails.length}}
            <br><img src="{{this.thumbnails.[0]}}" alt="Thumbnail" style="width: 100px; margin-top: 5px;" />
          {{/if}}
        </li>
      {{/each}}
    </ul>

    {{#if (eq user.role "admin")}}
      <hr />

      <h2>‚ûï Agregar nuevo producto</h2>
      <form id="add-product-form">
        <input type="text" id="title" placeholder="T√≠tulo" required>
        <input type="text" id="description" placeholder="Descripci√≥n" required>
        <input type="text" id="code" placeholder="C√≥digo √∫nico" required>
        <input type="number" id="price" placeholder="Precio" required>
        <input type="number" id="stock" placeholder="Stock" required>
        <input type="text" id="category" placeholder="Categor√≠a" required>
        <input type="text" id="thumbnails" placeholder="URL de imagen (opcional)">
        <button type="submit">Crear producto</button>
      </form>

      <h2>üóëÔ∏è Eliminar producto</h2>
      <form id="delete-product-form">
        <input type="text" id="delete-product-id" placeholder="ID del producto a eliminar" required>
        <button type="submit">Eliminar producto</button>
      </form>
    {{else}}
      <p style="color: red;">‚ö†Ô∏è Solo los administradores pueden agregar o eliminar productos.</p>
    {{/if}}
  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();

    socket.on('updateProducts', (productos) => {
      const productList = document.getElementById('product-list');
      productList.innerHTML = '';
      productos.forEach(product => {
        const li = document.createElement('li');
        li.id = `product-${product._id}`;
        li.innerHTML = `
          <strong>${product.title}</strong> - $${product.price} - Stock: ${product.stock} - Categor√≠a: ${product.category}
          <br>ID: <code>${product._id}</code>
          ${product.thumbnails && product.thumbnails.length > 0
            ? `<br><img src="${product.thumbnails[0]}" alt="Thumbnail" style="width: 100px; margin-top: 5px;" />`
            : ''}
        `;
        productList.appendChild(li);
      });
    });

    const formAdd = document.getElementById('add-product-form');
    if (formAdd) {
      formAdd.addEventListener('submit', function (event) {
        event.preventDefault();
        const newProduct = {
          title: document.getElementById('title').value,
          description: document.getElementById('description').value,
          code: document.getElementById('code').value,
          price: parseFloat(document.getElementById('price').value),
          stock: parseInt(document.getElementById('stock').value),
          category: document.getElementById('category').value,
          thumbnails: document.getElementById('thumbnails').value
            ? [document.getElementById('thumbnails').value]
            : []
        };
        socket.emit('addProduct', newProduct);
        formAdd.reset();
      });
    }

    const formDelete = document.getElementById('delete-product-form');
    if (formDelete) {
      formDelete.addEventListener('submit', function (event) {
        event.preventDefault();
        const productId = document.getElementById('delete-product-id').value;
        socket.emit('deleteProduct', productId);
        formDelete.reset();
      });
    }
  </script>
{{/content}}

{{/extend}}